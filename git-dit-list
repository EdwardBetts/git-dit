#!/usr/bin/env bash
#
#   git-dit - the distributed issue tracker for git
#   Copyright (C) 2016 Matthias Beyer <mail@beyermatthias.de>
#   Copyright (C) 2016 Julian Ganz <neither@nut.email>
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License version 2 as
#   published by the Free Software Foundation.
#
# -----
#
# $(basename $0) [options]
#
# (c) 2016 Matthias Beyer, Julian Ganz

abort() {
    echo "$*" >&2
    exit 1
}

SUBDIRECTORY_OK=1
USAGE="[options]"
LONG_USAGE="    Options:
        -h          Display this message
        -a          Abbreviate issue hash
        -l          List long (not one line per issue, executes 'git dit show'
                    on each issue)

List issues.

Issues are listed in the following form:

    <hash> (<date when the issue was added, human readable>) <header line>

More functionality may come and the output format may change."

. "$(git --exec-path)/git-sh-setup"


ABBREV=0
LONG=0

while getopts "hal" opt
do
  case $opt in

    h)
        usage
        exit 0
        ;;

    a)
        ABBREV=1
        ;;

    l)
        LONG=1
        ;;

    *)
        echo -e "\n  Option does not exist : $OPTARG\n"
        usage
        exit 1
        ;;

  esac
done
shift $(($OPTIND-1))

FORMAT="%ct "
[[ $ABBREV -eq 1 ]] && FORMAT+="%h" || FORMAT+="%H"

FORMAT+=" (%ar) %s"

git dit get-issue-tree-init-hashes | while read hash; do
    git --no-pager show --format="$FORMAT" "$hash"
done | sort -n --reverse | uniq | cut -d " " -f 2- | \
    if [[ $LONG -eq 1 ]]; then
        cut -d " " -f 1 | \
            while read hash; do
                git --no-pager dit show -I "$hash"; echo;
            done | \
            $(git var GIT_PAGER)
    else
        cat
    fi

